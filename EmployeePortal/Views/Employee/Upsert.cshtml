@model EmployeePortal.Models.Employee

@{
    ViewBag.Title = "Create";
}


<div class="card w-35 mx-auto reg-form">
    <div class="card-header text-center fs-4">
        Employee Registration Form
    </div>
    <div class="card-body">
        @using (Html.BeginForm("Upsert", "Employee", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.EmployeeId)
            <div class="row mb-2">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="row mb-2">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row mb-2">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isNumberKey(event)" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>

            <div class="row mb-2">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control",type="date", max = DateTime.Now.ToString("yyyy-MM-dd") } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-offset-2 col-md-12 text-center">
                    @if (Model!=null && Model.EmployeeId != 0)
                    {
                        <input type="submit" value="Update" class="btn btn-primary w-50" />
                    }
                    else
                    {
                        <input type="submit" value="Create" class="btn btn-primary w-50" />
                    }
                    
                </div>
            </div>
        </div>
        }
    </div>
    <div class="card-footer text-body-secondary">
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
